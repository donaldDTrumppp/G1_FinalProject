@page
@model CreateModel

@{
    ViewData["Title"] = "Create";
}

<header class="my-6">
    <h3 class="text-center font-semibold uppercase text-gray-300">Basiha Medical - your mom</h3>
    <p class="text-center font-extrabold text-sky-700 tracking-tight text-5xl">Create Appointment</p>
    <h4 class="font-medium text-center text-red-500" style="margin-top:10px">** Fill all field **</h4>
</header>
<div id="toast-danger" class="flex @(String.IsNullOrEmpty(Model.errorMessage)? "hidden": "block") animate-[fade-out_2s_ease-out_1s_1_forwards] opacity-1 flex-col fixed z-50 top-5 right-5 items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800" role="alert">
    <div class="flex flex-row items-center justify-between w-full">
        <div class="flex flex-row items-center">
            <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg dark:bg-red-800 dark:text-red-200">
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z" />
                </svg>
                <span class="sr-only">Error icon</span>
            </div>
            <div class="ms-3 text-sm font-normal"><span id="toast-er-message">An error has occured</span></div>
        </div>
        <div>
            <button type="button" class="ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700" data-dismiss-target="#toast-danger" aria-label="Close">
                <span class="sr-only">Close</span>
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                </svg>
            </button>
        </div>
    </div>
    <div class="flex flex-row items-center justify-between w-full">
        <div class="w-full bg-gray-200 rounded-full h-1.5 mb-1 mt-2 dark:bg-gray-700">
            <div id="animateDiv1" class="bg-red-400 h-1.5 rounded-full dark:bg-green-300 animate-[reduce_2s_ease-in-out_0s_1_forwards]" style="width: 100%"></div>
        </div>
    </div>
</div>
@{
    var compareDate = new DateTime(1900, 1, 1);
    var currentDate = new DateOnly();
}
<form id="createForm" class="max-w-2xl mx-auto" method="post">
    <p class="text-2xl font-extrabold dark:text-white inline-block">
        Appointment Details
    </p>
    <div>
        <div class="grid md:grid-cols-2 md:gap-6">
            <h3 class="text-lg mb-1 text-gray-900 font-bold">Patient Info</h3>
        </div>
        <div class="flex justify-between">
            <input name="searchPatientID" id="searchPatientID" style="display: none" value="@Model.searchPatientID" type="text"  class="rounded-bl-lg  rounded-l-lg border-gray-300 text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block p-2.5 cursor-default dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 w-full"/>
            <input name="searchPatientName" id="searchPatientName" value="@Model.searchPatientName" type="text" aria-label="disabled input" class="rounded-bl-lg bg-gray-100  rounded-l-lg border-gray-300 text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block p-2.5 cursor-default dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 w-full" disabled/>
            <a style="margin:0" data-modal-target="searchUserModal" data-modal-toggle="searchUserModal" class="cursor-pointer ml-4 my-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-r-lg text-sm px-8 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</a>
        </div>
        <p id="search-error" style="display: none;color: red"></p>
        <div>
            <p style="color:red">@Model.patientError</p>
        </div>
        <div class="noAccount">
            <div class="grid md:grid-cols-2 md:gap-6">
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Fullname</label>
                    <input id="fullname" value="@Model.fullname" name="fullname" type="text" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-dafault dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <p id="fullname-error" style="display: none;color: red"></p>
                </div>
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Address</label>
                    <input id="address" value="@Model.address" name="address" type="text" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-dafault dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <p id="address-error" style="display: none;color: red"></p>
                </div>
            </div>
            <div class="grid md:grid-cols-2 md:gap-6">
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Date of birth</label>
                    <div class="relative max-w-sm">
                        <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                            </svg>
                        </div>
                        @if (compareDate > @Model.dob)
                        {
                            <input datepicker datepicker-format="dd/mm/yyyy" id="dob" name="dob" type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                        }
                        else
                        {
                            <input datepicker datepicker-format="dd/mm/yyyy" id="dob" name="dob" value="@Model.dob" type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                        }

                    </div>
                    <p id="dob-error" style="color: red">@Model.dobError</p>
                </div>
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Phone Number</label>
                    <input id="phonenum" value="@Model.phone" name="phone" type="text" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-dafault dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <p id="phone-error" style="display: none;color: red"></p>
                </div>
            </div>
            <div class="grid md:grid-cols-2 md:gap-6">
                <div class="relative z-0 w-full mb-5 group">
                    <label for="floating_dob" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                    <input id="email" value="@Model.email" name="email" type="text" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-dafault dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <p id="email-error" style="display: none;color: red"></p>
                </div>
                @* <div class="relative z-0 w-full mb-5 group">
                    <label for="floating_dob" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Health insurance</label>
                    <input id="health" value="@Model.health" name="health" type="text" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-dafault dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <p id="health-error" style="display: none;color: red"></p>
                </div> *@
            </div>
        </div>
    </div>
    <div>
        <h3 class="text-lg mb-1 text-gray-900 font-bold">Symptoms</h3>
        <textarea id="symptoms" name="symptoms" rows="4" class="block p-2.5 w-full text-sm text-gray-900 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">@Model.symptoms</textarea>
        <p id="symptoms-error" style="display: none;color: red"></p>
    </div>
    <div>
        <h3 class="text-lg mb-1 text-gray-900 font-bold">Appointment</h3>
        <div>
            <p style="color:red">@Model.appointmentError</p>
        </div>
        <div class="grid md:grid-cols-2 md:gap-6">
            <div class="relative z-0 w-full mb-5 group">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Specialist</label>
                <select id="specialist" name="specialistId" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    @foreach (var item in Model.specialistList)
                    {
                        @if (Model.specialistId == item.SpecialistId)
                        {
                            <option value="@item.SpecialistId" selected>@item.SpecialistName</option>
                        }
                        else
                        {
                            <option value="@item.SpecialistId">@item.SpecialistName</option>
                        }

                    }
                </select>
                <p id="specialist-error" style="display: none;color: red"></p>
            </div>
            <div class="relative z-0 w-full mb-5 group">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Branch</label>
                <select id="branch" name="branchId" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    @foreach (var item in Model.branchList)
                    {
                        @if (Model.branchId == item.BranchId)
                        {
                            <option value="@item.BranchId" selected>@item.BranchName</option>
                        }
                        else
                        {
                            <option value="@item.BranchId">@item.BranchName</option>
                        }
                    }
                </select>
                <p id="branch-error" style="display: none;color: red"></p>
            </div>
        </div>
        <div class="grid md:grid-cols-2 md:gap-6">
            <div class="relative z-0 w-full mb-5 group">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Doctor</label>
                <select id="doctor" name="doctorId" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    @foreach (var item in Model.doctorList)
                    {
                        @if (Model.doctorId == item.UserId)
                        {
                            <option value="@item.UserId" selected><p>@item.User.Name | </p><p>@item.DoctorDepartment.BranchName | </p><p>@item.DoctorSpecialistNavigation.SpecialistName</p> </option>
                        }
                        else
                        {
                            <option value="@item.UserId"><p>@item.User.Name | </p><p>@item.DoctorDepartment.BranchName | </p><p>@item.DoctorSpecialistNavigation.SpecialistName</p></option>
                        }
                    }
                </select>
                <p id="doctor-error" style="display: none;color: red"></p>
            </div>
            <div class="grid md:grid-cols-2 md:gap-6">
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Requested date</label>
                    <div class="relative max-w-sm">
                        <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
                            </svg>
                        </div>
                        @if (compareDate > @Model.requestedDate)
                        {
                            <input datepicker datepicker-format="dd/mm/yyyy" name="requestedDate" id="requestDate" type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date">
                        }
                        else
                        {
                            <input datepicker datepicker-format="dd/mm/yyyy" name="requestedDate" value="@Model.requestedDate" id="requestDate" type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date">
                        }
                    </div>
                    <p id="requestedDate-error" style="color: red">@Model.dateError</p>
                </div>
                <div class="relative z-0 w-full mb-5 group">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Requested Time</label>
                    <select id="requestTime" name="requestedTime" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                        @if (Model.requestedTime == 1 || Model.requestedTime == 0)
                        {
                            <option value="1" selected>7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 2)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2" selected>8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 3)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3" selected>9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 4)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4" selected>10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 5)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5" selected>13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 6)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6" selected>14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 7)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7" selected>15:00 - 16:00</option>
                            <option value="8">16:00 - 17:00</option>
                        }
                        else if (Model.requestedTime == 8)
                        {
                            <option value="1">7:00 - 8:00</option>
                            <option value="2">8:00 - 9:00</option>
                            <option value="3">9:00 - 10:00</option>
                            <option value="4">10:00 - 11:00</option>
                            <option value="5">13:00 - 14:00</option>
                            <option value="6">14:00 - 15:00</option>
                            <option value="7">15:00 - 16:00</option>
                            <option value="8" selected>16:00 - 17:00</option>
                        }
                    </select>
                    <p id="requestedTime-error" style="display: none;color: red"></p>
                </div>
            </div>
        </div>
    </div>
    <div class="flex justify-end items-center">
        <button type="button" onclick="window.location.href='./Index'" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">Back</button>
        <button type="Button" onclick="checkInputData()" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Save</button>
    </div>
</form>


<div id="searchUserModal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-modal md:h-full">
    <div class="relative p-4 w-full max-w-6xl h-full md:h-auto">
        <!-- Modal content -->
        <div class="relative p-4 text-center bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5">
            <button type="button" class="text-gray-400 absolute top-2.5 right-2.5 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="searchUserModal">
                <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                <span class="sr-only">Close modal</span>
            </button>
            <div style="margin-top: 25px; margin-bottom: 10px">
                <input type="text" placeholder="Search..." id="searchInput" class=" border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-default dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" oninput="searchTable()">
            </div>
            <div class="flex justify-center items-center space-x-4">
                <table id="userTable" class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                        <tr>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    Fullname
                                </div>
                            </th>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    DOB
                                </div>
                            </th>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    Email
                                </div>
                            </th>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    Phone number
                                </div>
                            </th>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    Address
                                </div>
                            </th>
                            @* <th scope="col" class="px-6 py-3">
                                <div class="flex items-center">
                                    Health insurrance
                                </div>
                            </th> *@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.patientList)
                        {
                            <tr>
                                <td class="px-6 py-4 fullname" id="tablePatientName@(item.UserId)">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td class="px-6 py-4 dob" id="tablePatientDob@(item.UserId)">
                                    @if (item.Dob != null)
                                    {
                                        @item.Dob.ToString("MM/dd/yyyy")
                                    }
                                </td>
                                <td class="px-6 py-4 email" id="tablePatientEmail@(item.UserId)">
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td class="px-6 py-4 phone" id="tablePatientPhone@(item.UserId)">
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td class="px-6 py-4 phone" id="tablePatientAddress@(item.UserId)">
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                @* <td class="px-6 py-4 phone" id="tablePatientHealth@(item.UserId)">
                                    @Html.DisplayFor(modelItem => item.Patient.HealthInsurance)
                                </td> *@
                                <td>
                                    <button data-modal-toggle="searchUserModal" id="@item.UserId" onclick="assignSearchData(@item.UserId)" type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Choose</button>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/site.js"></script>
<script>
    function checkInputData() {
        var symptoms = document.getElementById('symptoms').value.trim();
        var requestedDate = document.getElementById('requestDate').value.trim();
        var requestedTime = document.getElementById('requestTime').value;

        var errorFlag = false;
        var name = document.getElementById('fullname').value.trim();
        var address = document.getElementById('address').value.trim();
        var dob = document.getElementById('dob').value.trim();
        var phone = document.getElementById('phonenum').value.trim();
        var email = document.getElementById('email').value.trim();
        // var health = document.getElementById('health').value.trim();
        if (name.length === 0 || name.length > 50) {
            errorFlag = true;
            document.getElementById('fullname-error').innerHTML = "Must be less than 50 characters and not empty.";
            document.getElementById('fullname-error').style.display = "block";
        } else {
            document.getElementById('fullname-error').innerHTML = "";
            document.getElementById('fullname-error').style.display = "none";
        }



        if (address.length === 0 || address.length > 100) {
            errorFlag = true;
            document.getElementById('address-error').innerHTML = "Must be less than 100 characters and not empty.";
            document.getElementById('address-error').style.display = "block";
        } else {
            document.getElementById('address-error').innerHTML = "";
            document.getElementById('address-error').style.display = "none";
        }


        if (phone === '') {
            errorFlag = true;
            document.getElementById('phone-error').innerHTML = "Phone number is required.";
            document.getElementById('phone-error').style.display = "block";
        } else {
            var phoneRegex = /^[0-9]{10}$/;

            if (!phoneRegex.test(phone)) {
                errorFlag = true;
                document.getElementById('phone-error').innerHTML = "Phone number must be 10 digits.";
                document.getElementById('phone-error').style.display = "block";
            } else {
                document.getElementById('phone-error').innerHTML = "";
                document.getElementById('phone-error').style.display = "none";
            }
        }
        // if(health !==''){
        //     var phoneRegex = /^\d{1,29}$/;

        //     if (!phoneRegex.test(phone)) {
        //         errorFlag = true;
        //         document.getElementById('health-error').innerHTML = "Phone number must be less than 30 digits.";
        //         document.getElementById('health-error').style.display = "block";
        //     } else {
        //         document.getElementById('health-error').innerHTML = "";
        //         document.getElementById('health-error').style.display = "none";
        //     }
        // }
        if (symptoms.length === 0) {
            errorFlag = true;
            document.getElementById('symptoms-error').innerHTML = "Symptoms are required.";
            document.getElementById('symptoms-error').style.display = "block";
        } else {
            document.getElementById('symptoms-error').innerHTML = "";
            document.getElementById('symptoms-error').style.display = "none";
        }
        if (errorFlag === false) {
            document.getElementById('createForm').submit();
        }
    }


    function assignSearchData(id) {
        document.getElementById('searchPatientID').value = id;
        document.getElementById('searchPatientName').value = document.getElementById('tablePatientName' + id).innerHTML.trim();
        document.getElementById('fullname').value = document.getElementById('tablePatientName' + id).innerHTML.trim();
        document.getElementById('address').value = document.getElementById('tablePatientAddress' + id).innerHTML.trim();
        document.getElementById('dob').value = document.getElementById('tablePatientDob' + id).innerHTML.trim();
        document.getElementById('phonenum').value =  document.getElementById('tablePatientPhone' + id).innerHTML.trim();
        document.getElementById('email').value = document.getElementById('tablePatientEmail' + id).innerHTML.trim();
        // document.getElementById('health').value = document.getElementById('tablePatientHealth' + id).innerHTML.trim();
        }
    function searchTable() {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            // Search through all columns (except the last one with button)
            for (j = 0; j < tr[i].getElementsByTagName("td").length - 1; j++) {
                td = tr[i].getElementsByTagName("td")[j];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                        break; // Show the row if any column matches and stop checking further columns
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.js"></script>

<script>
    function test() {
        var toast = document.getElementById("toast-danger");
        toast.classList.remove("animate-[fade-out_2s_ease-out_1s_1_forwards]");
        void toast.offsetWidth;
        toast.classList.add("animate-[fade-out_2s_ease-out_1s_1_forwards]");
        document.getElementById('animateDiv').classList.add("reduceWidth");
        document.getElementById('animateDiv').style.width = '0%';
    }

    document.addEventListener('DOMContentLoaded', (event) => {
        var toast = document.getElementById("toast-danger");
        if (toast.classList.contains("block")) {
            document.getElementById('animateDiv').classList.add("reduceWidth");
            document.getElementById('animateDiv').style.width = '0%';
        }

        function onTransitionEnd(event) {
            if (event.propertyName === 'width' && animateDiv.style.width === '0%') {
                document.getElementById('animateDiv').classList.remove("reduceWidth");
                document.getElementById('animateDiv').style.width = '100%';
                console.log(document.getElementById('animateDiv').style.width);
                //   toast.classList.add("animate-[fade-out_1s_ease-out_0.25s_1]");

            }
        }
        animateDiv.addEventListener('transitionend', onTransitionEnd);
    });
</script>
